# Adapted default config for sway
# Read `man 5 sway` for a complete reference.
#
# Copyright (c) 2016-2017 Drew DeVault
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term /usr/bin/systemd-run --user --scope -q \
    -p PartOf=graphical-session.target \
    -p After=graphical-session.target \
    --unit="terminal-$(systemd-id128 new).scope" \
    --description="sway-launched terminal" \
    -- /usr/bin/alacritty
# Launch applications through wofi, in a transient systemd scope.
set $menu /usr/bin/systemd-run --user --scope -q \
    -p PartOf=graphical-session.target \
    -p After=graphical-session.target \
    --unit="wofi-app-$(systemd-id128 new).scope" \
    --description="sway-wofi-launched application" \
    -- /usr/bin/wofi -G -S drun -i -t /usr/bin/alacritty
# Same thing but for shell commands
set $run /usr/bin/systemd-run --user --scope -q \
    -p PartOf=graphical-session.target \
    -p After=graphical-session.target \
    --unit="wofi-sh-$(systemd-id128 new).scope" \
    --description="sway-wofi-launched command" \
    -- /usr/bin/wofi -G -S run -i
# Set up workspaces with names
set $ws1 1::sh
set $ws2 2:www
set $ws3 3::im
set $ws4 4::mail
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9
set $ws10 10

### Output configuration
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

# Fallback for other screens (also, notebook)
output * background "~/.local/share/wallpaper/current" fill

# Desktop
output 'Goldstar Company Ltd IPS235 Serial Number' {
    position 1280 0
    subpixel rgb
    background "~/.wallpaper_center.png" center
}

output 'Goldstar Company Ltd  0x00009FBF' {
    position 0 56
    subpixel rgb
    background "~/.wallpaper_left.png" center
}

output 'NEC Corporation LCD195NX 94T19400NB' {
    position 3200 56
    subpixel rgb
    background "~/.wallpaper_right.png" center
}

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# Start the screenlocker as an user service, so that it can be tracked for
# _both_ startup completion and (possibly unwanted) termination. The startup
# tracking is needed so that the system does not go to sleep before the lock
# screen is fully set up (systemctl blocks until swaylock has forked), the
# termination tracking is needed to emergency terminate the session in case the
# screenlocker is somehow crashed. This is not perfect security, there will be a
# short timeslot in which the session is unprotected before it gets shut down.
# The only place to properly secure the session against forced screenlock
# termination would be the compositor itself, but unfortunately sway devs are
# unwilling to incorporate something like this. Just like with xscreensaver,
# they are sure that their own screenlocker will never crash unexpectedly.
exec /usr/bin/swayidle -w \
    timeout 10 'if pgrep -x swaylock; then swaymsg "output * dpms off"; fi' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep "systemctl --user start screenlock.service" \
    lock "systemctl --user start screenlock.service" \
    unlock 'systemctl --user stop screenlock.service' \
    idlehint 300

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.
input "1:1:AT_Translated_Set_2_keyboard" {
    xkb_layout de
    xkb_model "pc105"
    xkb_options "caps:hyper,altwin:swap_lalt_lwin,shift:both_capslock_cancel"
    xkb_numlock enabled
}
input "2689:517:CHESEN_PS2_to_USB_Converter" {
    xkb_layout de
    xkb_model "pc105"
    xkb_options "caps:hyper,altwin:swap_lalt_lwin,shift:both_capslock_cancel"
}
input "2:10:TPPS/2_IBM_TrackPoint" {
    pointer_accel -0.5
}
input "2:7:SynPS/2_Synaptics_TouchPad" {
    natural_scroll enabled
    tap enabled
}

### Design and colors
# Borders & Decoration
default_border pixel 1
default_floating_border pixel 1
gaps inner 4
gaps outer -2
smart_borders no_gaps
smart_gaps on
title_align center
titlebar_border_thickness 1
# Colors
client.focused          "#484848" "#484848" "#dddddd" "#458588" "#484848"
client.focused_inactive "#484848" "#2d2d2d" "#929292" "#2d2d2d" "#2d2d2d"
client.unfocused        "#484848" "#2d2d2d" "#929292" "#2d2d2d" "#2d2d2d"
client.urgent           "#98971a" "#98971a" "#1d2021" "#98971a" "#98971a"
# Fonts
font SF Pro Display 9

### Key bindings
#
# Basics:
#
    # start a terminal
    bindsym $mod+Return exec $term

    # kill focused window
    bindsym $mod+Shift+q kill

    # start the app launcher
    bindsym $mod+d exec $menu

    # start the command launcher
    bindsym $mod+Shift+d exec $run

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # reload the configuration file
    bindsym $mod+Shift+c reload

    # exit sway (logs you out of your Wayland session)
    # sway-session.target and graphical-session.target are bound together, but
    # we stop the latter here explicitly to block on it, so all applications
    # get shut down before sway exits.
    # Note that this only unsets variables for systemd, dbus does not support
    # unsetting them. So I guess try to avoid launching stuff with dbus?
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'systemctl --user stop sway-session.target graphical-session.target && systemctl --user unset-environment DISPLAY I3SOCK SWAYSOCK WAYLAND_DISPLAY XCURSOR_SIZE XCURSOR_THEME XDG_CURRENT_DESKTOP && swaymsg exit'
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'shutdown' 'stop_apps_and poweroff' -B 'reboot' 'stop_apps_and reboot' -B 'logout' 'stop_apps_and swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # _move_ the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # switch to workspace
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace $ws1
    bindsym $mod+Shift+2 move container to workspace $ws2
    bindsym $mod+Shift+3 move container to workspace $ws3
    bindsym $mod+Shift+4 move container to workspace $ws4
    bindsym $mod+Shift+5 move container to workspace $ws5
    bindsym $mod+Shift+6 move container to workspace $ws6
    bindsym $mod+Shift+7 move container to workspace $ws7
    bindsym $mod+Shift+8 move container to workspace $ws8
    bindsym $mod+Shift+9 move container to workspace $ws9
    bindsym $mod+Shift+0 move container to workspace $ws10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
    # move workspaces to different outputs
    bindsym $mod+o move workspace to output right
    bindsym $mod+Shift+o move workspace to output up
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad
    bindsym $mod+Shift+F12 move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
    bindsym $mod+F12 scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
#
# Notification handling:
#
    # Close last notification
    bindsym $mod+n exec makoctl dismiss
mode "notification" {
    bindsym return makoctl invoke

    # return to default mode
    bindsym Escape mode "default"
}
bindsym $mod+m mode "notification"
#
# Custom launch shortcuts
#
    bindsym --locked XF86MonBrightnessDown exec blight set -/14
    bindsym --locked XF86MonBrightnessUp exec blight set +/14
    bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
    bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
    bindsym XF86ScreenSaver exec loginctl lock-session
    bindsym ctrl+$mod+l exec loginctl lock-session
    bindsym XF86Sleep exec systemctl suspend
    bindsym --locked XF86AudioPrev exec playerctl previous
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym Print exec grim -g "$(slurp)" - | tee /tmp/screenshot.png | wl-copy
    bindsym Shift+Print exec grim | tee /tmp/screenshot.png | wl-copy

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

include ~/.config/sway/rules
exec xrdb ~/.Xresources
include ~/.config/sway/autostart_early
exec dbus-update-activation-environment --systemd DISPLAY I3SOCK SWAYSOCK WAYLAND_DISPLAY XCURSOR_SIZE XCURSOR_THEME XDG_CURRENT_DESKTOP=sway
exec systemctl --user start sway-session.target
